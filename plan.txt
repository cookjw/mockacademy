Personal App Academy emulation, with Python/Django in place of Ruby/Rails (apologies to Zack M. Davis)

Day 1:
- monkeypatch list type: not possible (create user-defined subclass instead) (http://stackoverflow.com/questions/192649/can-you-monkey-patch-methods-on-core-types-in-python)
- playable Tower of Hanoi game
- write a function that accepts integers and returns a string describing the number in words (so e.g. 259123 becomes "two hundred fifty nine thousand one hundred twenty three")


Day 2:
- tic-tac-toe game (wrote for two players; AI deferred to Day 5)


Day 3:
- Hangman
- Mastermind
- A* search (did Dikjstra's algorithm, a special case)
- dictionaries with lists as keys (not possible, because lists mutable)


Day 4:
- Procs and recursion
- Word Chains: find a way to mutate a dictionary word into another of the same length by changing one letter at a time,
with all the intermediaries also being valid words (e.g., *duck* to unprintable to *funk* to *fund*). 

Day 5:
- Graph search (breadth- and depth-first) 
- write a better (in fact, unbeatable) AI for tic-tac-toe game.

